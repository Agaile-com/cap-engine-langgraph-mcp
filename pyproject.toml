[project]
name = "langgraph-mcp"
version = "0.0.1"
description = "LangGraph solution template for MCP"
authors = [
    { name = "Pranav Dhoolia", email = "dhoolia.pranav@gmail.com" },
    { name = "Praneet Dhoolia", email = "praneet.dhoolia@gmail.com" },
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "asyncio>=3.4.3",
    "langchain>=0.2.17",
    "langchain-core>=0.3.21",
    "langchain-milvus>=0.1.7",
    "langchain-openai>=0.2.11",
    "langgraph>=0.2.56",
    "mcp>=1.0.0",
    "python-dotenv>=1.0.1"
]

[project.optional-dependencies]
dev = ["mypy>=1.11.1", "ruff>=0.6.1", "debugpy"]

[build-system]
requires = ["setuptools>=73.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["langgraph_mcp"]
[tool.setuptools.package-dir]
"langgraph_mcp" = "src/langgraph_mcp"


[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.ruff]
lint.select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "I",    # isort
    "D",    # pydocstyle
    "D401", # First line should be in imperative mood
    "T201",
    "UP",
]
lint.ignore = [
    "UP006",
    "UP007",
    # We actually do want to import from typing_extensions
    "UP035",
    # Relax the convention by _not_ requiring documentation for every function parameter.
    "D417",
    "E501",
]
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "UP"]
[tool.ruff.lint.pydocstyle]
convention = "google"
